import parse from "node-html-parser";
export type Tag = {
  name: string;
  label: string;
  image_url: string;
};
export type Course = {
  slug: string;
  title: string;
  average_rating_out_of_5: number;
  watched_count: number;
  path: string;
  description: string | null;
  access_state: string;
  created_at: string;
  tags: Tag[];
  image_thumb_url: string;
  instructor: {
    id: number;
    full_name: string;
    path: string;
  };
};
// Generated by ts-to-zod
import { z } from "zod";

const tagSchema = z.object({
  name: z.string(),
  label: z.string(),
  image_url: z.string(),
});

const courseSchema = z.object({
  slug: z.string(),
  title: z.string(),
  average_rating_out_of_5: z.number(),
  watched_count: z.number(),
  path: z.string(),
  description: z.string().nullable(),
  access_state: z.string(),
  created_at: z.string(),
  tags: z.array(tagSchema),
  image_thumb_url: z.string(),
  instructor: z.object({
    id: z.number(),
    full_name: z.string(),
    path: z.string(),
  }),
});

const jsonSchema = z.object({
  props: z.object({
    pageProps: z.object({
      courses: z.array(courseSchema),
    }),
  }),
});

export const parseCoursesPage = (coursesPage: string): Course[] | undefined => {
  const dom = parse(coursesPage);
  const scripts = dom.getElementsByTagName("script");
  const lastScript = scripts.pop();
  if (lastScript) {
    const json = JSON.parse(lastScript.innerHTML) as unknown;
    const courses = jsonSchema.parse(json).props.pageProps.courses;
    return courses;
  }
  return undefined;
};
